{"version":3,"sources":["pages/styled_repo.js","pages/Repositories.jsx","pages/styled_home.js","pages/Home.jsx","routes/Routes.jsx","App.js","index.js"],"names":["Div","styled","div","H1","h1","Ul","ul","Li","li","Linkk","Link","Repositories","history","useHistory","useState","repositories","setRepositories","useEffect","repositoriesName","localStorage","getItem","JSON","parse","clear","push","map","repo","i","to","Input","input","Button","button","P","p","App","props","usuario","setUsuario","erro","setErro","type","className","placeholder","value","onChange","e","target","onClick","Axios","get","then","response","data","list","name","setItem","stringify","catch","err","Routes","exact","path","component","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAGaA,EAAMC,IAAOC,IAAV,oFAMHC,EAAKF,IAAOG,GAAV,mHAOFC,EAAKJ,IAAOK,GAAV,4FAKFC,EAAKN,IAAOO,GAAV,kHAOFC,EAAQR,YAAOS,IAAPT,CAAH,sM,OCxBH,SAASU,IACtB,IAAMC,EAAUC,cAChB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAYA,OAXAC,qBAAU,WACR,IAAIC,EAAmBC,aAAaC,QAAQ,gBACrB,MAApBF,GACDA,EAAmBG,KAAKC,MAAMJ,GAC9BF,EAAgBE,GAChBC,aAAaI,MAAM,iBAEnBX,EAAQY,KAAK,OAEd,IAGD,eAAC,EAAD,WACE,cAAC,EAAD,8BAEA,cAAC,EAAD,UACGT,EAAaU,KAAI,SAACC,EAAMC,GACvB,OACE,eAAC,EAAD,WAAeA,EAAI,EAAnB,MAAyBD,IAAdC,QAIjB,cAAC,EAAD,CAASC,GAAG,IAAZ,yB,+BC3BO5B,EAAMC,IAAOC,IAAV,qIAQH2B,EAAQ5B,IAAO6B,MAAV,6MAYLC,EAAS9B,IAAO+B,OAAV,gHAKN7B,EAAKF,IAAOG,GAAV,mHAOF6B,EAAIhC,IAAOiC,EAAV,2JCYCC,MAzCf,SAAaC,GACX,IAAMxB,EAAUC,cAChB,EAA8BC,mBAAS,IAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KACA,EAAwBxB,oBAAS,GAAjC,mBAAOyB,EAAP,KAAaC,EAAb,KAsBA,OACE,cAAC,EAAD,UACE,gCACE,cAAC,EAAD,6CADF,IAC2C,uBACzC,cAAC,EAAD,CAASC,KAAK,OAAOC,UAAU,eAAeC,YAAY,uBAAoBC,MAAOP,EAASQ,SAAU,SAAAC,GAAC,OAAIR,EAAWQ,EAAEC,OAAOH,UACjI,cAAC,EAAD,CAAUI,QAzBhB,WAGEC,IAAMC,IAAN,UAFgB,+BAEhB,YAAwBb,EAAxB,YADkB,UAEfc,MAAK,SAAAC,GACF,IAAMrC,EAAeqC,EAASC,KAC1BC,EAAO,GACUvC,EAAaU,KAAI,SAAAC,GACpC4B,EAAK9B,KAAKE,EAAK6B,SAGjBpC,aAAaqC,QAAQ,eAAgBnC,KAAKoC,UAAUH,IACpD1C,EAAQY,KAAK,oBAGhBkC,OAAM,SAAAC,GACLnB,GAAQ,OASR,oBAEGD,EAAO,cAAC,EAAD,+CAA8C,SChCjD,SAASqB,IACpB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,gBAAgBC,UAAWpD,SCAxCwB,MAPf,SAAaC,GAEX,OACE,cAACwB,EAAD,KCFJK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.76b17d54.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nexport const Div = styled.div`\n  width: 100%;\n  max-width: 520px;\n  margin: 0 auto;\n`\n\nexport const H1 = styled.h1`\n  text-align: center;\n  font-size: 2rem;\n  font-family: sans-serif;\n  color: #333;\n`\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-family: sans-serif;\n`\nexport const Li = styled.li`\n  margin: 0.5rem 0;\n  background-color: black;\n  color: white;\n  padding: 0.5rem;\n`\n\nexport const Linkk = styled(Link)`\n  display: block;\n  width: 4rem;\n  text-align: center;\n  color: white;\n  background-color: black;\n  text-decoration: none;\n  margin: 2rem auto;\n  padding: .5rem;\n`\n","import React, {useEffect, useState} from 'react'\nimport * as S from './styled_repo';\nimport {useHistory} from 'react-router-dom';\n\nexport default function Repositories() {\n  const history = useHistory();\n  const [repositories, setRepositories] = useState([])\n  useEffect(() => {\n    let repositoriesName = localStorage.getItem('repositorios')\n    if(repositoriesName != null) {\n      repositoriesName = JSON.parse(repositoriesName)\n      setRepositories(repositoriesName)\n      localStorage.clear('repositorios')\n    } else {\n      history.push('/')\n    }\n  }, [])\n\n  return(\n    <S.Div>\n      <S.H1>Repositórios</S.H1>\n\n      <S.Ul>\n        {repositories.map((repo, i) => {\n          return(\n            <S.Li key={i}>{i + 1} - {repo}</S.Li>\n          )          \n        })}\n      </S.Ul>\n      <S.Linkk to=\"/\" > Voltar </S.Linkk>\n    </S.Div>\n  )\n}","import styled from 'styled-components'\n\nexport const Div = styled.div`\n  width: 100hw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const Input = styled.input`\n  border: 1px solid #ddd;\n  height: 1.5rem;\n  border-radius: .25rem 0 0 .25rem;\n  padding: 0 .5rem;\n\n  &focus, &active {\n    outline: none;\n    box-shadow: none;\n  }\n\n`\nexport const Button = styled.button`\n  height: 1.6rem;\n  border: 1px solid black;\n  border-radius: 0 .25rem .25rem 0;\n`\nexport const H1 = styled.h1`\n  text-align: center;\n  font-size: 2rem;\n  font-family: sans-serif;\n  color: #333;\n`\n\nexport const P = styled.p`\n  font-family: sans-serif;\n  text-align: center;\n  display: block;\n  font-size: .8rem;\n  color: red;\n  font-weight: 600;\n`","import React, {useState} from 'react'\nimport Axios from 'axios'\nimport * as S from './styled_home'\nimport {useHistory} from 'react-router-dom'\n\nfunction App(props) {\n  const history = useHistory();\n  const [usuario, setUsuario] = useState('')\n  const [erro, setErro] = useState(false)\n\n  function handlePesquisa() {\n    const baseUrl = 'https://api.github.com/users'\n    const targetUrl = 'repos'\n    Axios.get(`${baseUrl}/${usuario}/${targetUrl}`)\n      .then(response => {\n          const repositories = response.data;\n          let list = []\n          let repositoryName = repositories.map(repo => {\n            list.push(repo.name)\n          })\n          \n          localStorage.setItem('repositorios', JSON.stringify(list))\n          history.push('/repositories')\n        }\n      )\n      .catch(err => {\n        setErro(true) \n      })\n  }\n  \n  return (\n    <S.Div>\n      <div>\n        <S.H1>Informe o usuário do github</S.H1> <br/>\n        <S.Input type=\"text\" className=\"usuarioInput\" placeholder=\"informe o usuário\" value={usuario} onChange={e => setUsuario(e.target.value)}/>\n        <S.Button onClick={handlePesquisa}>buscar</S.Button>\n\n          {erro ? <S.P>Ocorreu um erro. Tente novamente</S.P> : ''}\n\n      </div>\n\n      \n    </S.Div>\n  );\n}\n\nexport default App;","import React from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Repositories from '../pages/Repositories'\nimport Home from '../pages/Home'\n\nexport default function Routes () {\n    return(\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/repositories\" component={Repositories} />\n        </Switch>\n      </BrowserRouter>\n    )\n}","import React, {useState} from 'react'\nimport Routes from './routes/Routes';\n\nfunction App(props) {\n  \n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}